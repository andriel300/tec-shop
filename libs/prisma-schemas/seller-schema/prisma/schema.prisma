generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/.prisma/seller-client"
}

datasource db {
  provider = "mongodb"
  url      = env("SELLER_SERVICE_DB_URL")
}

model Seller {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  authId      String  @unique @db.ObjectId // Links to auth-service User.id
  name        String
  email       String  @unique
  phoneNumber String
  country     String
  isVerified  Boolean @default(false)

  // Stripe Connect fields
  stripeAccountId        String?           @unique // Stripe Connect account ID
  stripeOnboardingStatus StripeStatus      @default(NOT_STARTED)
  stripeDetailsSubmitted Boolean           @default(false)
  stripePayoutsEnabled   Boolean           @default(false)
  stripeChargesEnabled   Boolean           @default(false)
  stripeOnboardingUrl    String?           // Current onboarding URL
  stripeRequirements     Json?             // Required fields from Stripe
  stripeLastUpdated      DateTime?         // Last webhook update

  // Business info
  shop Shop?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shop {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  sellerId String @unique @db.ObjectId
  seller   Seller @relation(fields: [sellerId], references: [id])

  businessName String
  bio          String?
  description  String? // Deprecated in favor of bio
  category     String
  address      String
  openingHours String
  website      String?
  socialLinks  Json[]

  // Shop metrics
  rating      Float   @default(0)
  totalOrders Int     @default(0)
  isActive    Boolean @default(true)

  // Relations
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  shopId      String   @db.ObjectId
  shop        Shop     @relation(fields: [shopId], references: [id], onDelete: Cascade)

  name        String
  description String
  price       Float
  stock       Int      @default(0)
  category    String

  // Images stored as array of file paths
  images      String[] // e.g., ["/uploads/product-123-0.jpg", "/uploads/product-123-1.jpg"]

  // Product status
  isActive    Boolean  @default(true)
  isFeatured  Boolean  @default(false)

  // SEO fields (optional for now)
  slug        String?  @unique
  tags        String[] @default([])

  // Sales metrics
  views       Int      @default(0)
  sales       Int      @default(0)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([shopId])
  @@index([category])
  @@index([isActive])
}

enum StripeStatus {
  NOT_STARTED     // Seller hasn't started Stripe onboarding
  PENDING         // Account created, onboarding in progress
  INCOMPLETE      // Onboarding started but missing information
  COMPLETE        // Fully onboarded and can accept payments
  RESTRICTED      // Account restricted due to issues
  REJECTED        // Account rejected by Stripe
}
